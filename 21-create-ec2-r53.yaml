# # assignment
  # # move this to vars_files

- name: create ec2 and r53 records   #creating ec2 instances with ansible 
  hosts: local
  connection: local
  vars:
    subnet_id: subnet-098d89efe1fed77f1  #in aws console generally while creating the instance it will be there default in networking section ,and you can also check for it under your created instances under networkinf --->subnet_id
    sg_id: "sg-090c706437630c49d"
    ami_id: "ami-09c813fb71547fc4f"
    instances:
    - mysql
    - backend
    - frontend
    zone: naziyadaws81.online
  tasks:
  - name: create ec2 instance
    amazon.aws.ec2_instance:        #module to install ec2 instance
     name: "{{ item }}"
     vpc_subnet_id: "{{subnet_id}}"
     instance_type: "t3.micro"
     security_group: "{{sg_id}}"
     image_id:  "{{ami_id}}"
    loop: "{{instances}}"
    register: ec2_instances

  - name: print the output
    ansible.builtin.debug:
     msg:  "{{ ec2_instances }}"
  
#private IP R53
  - name: create r53 private records
    amazon.aws.route53:
      state: present
      zone: "{{ zone }}"
      record: "{{ item.item }}.{{ zone }}" #mysql.naziyadaws81.online
      type: A
      ttl: 1
      value: "{{ item.instances[0].private_ip_address }}"
      wait: true
      overwrite: true
    loop: "{{ ec2_instances.results }}"

  # - name: create r53 public record for frontend
  #   amazon.aws.route53:
  #     state: present
  #     zone: "{{ zone }}"
  #     record: "{{ zone }}" #naziyadaws81.online
  #     type: A
  #     ttl: 1
  #     value: "{{ item.instances[0].public_ip_address }}"
  #     wait: true
  #     overwrite: true
  #   loop: "{{ ec2_instances.results }}"
  #   when: item.item == "frontend"